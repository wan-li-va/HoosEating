{"version":3,"sources":["Entry.js","Filter.js","Restaurants.js","RestaurantFilter.js","Input.js","AppMap.js","App.js","serviceWorker.js","index.js"],"names":["Entry","props","componentDidMount","dist","geolib","latitude","restaurant","geometry","location","lat","longitude","lng","Math","round","Number","EPSILON","setState","distance","entry","name","opening_hours","photos","price_level","rating","types","user_ratings_total","vicinity","setDistance","showAddress","state","address","className","Card","Body","Text","this","Button","onClick","Component","Filter","id","onChange","e","handleFilterChange","target","value","Restaurants","filterOption","isFiltering","console","log","filterBy","sortBy","stores","restaurants","sort","store1","store2","price1","price2","undefined","map","RestaurantFilter","handleRestaurantChange","RestaurantBar","restbarPressed","changeFilter","Price","handlePriceChange","pricePressed","ToggleButtonGroup","type","size","variant","Input","require","config","Geocode","setApiKey","process","fromAddress","then","response","results","long","getStores","setLatLng","error","alert","axios","get","radius","price","data","setRestaurants","restaurantOption","priceOption","Navbar","bg","Brand","min","max","AppMap","viewport","center","zoom","API","prevProps","markers","Marker","position","Popup","border","Header","Img","src","photo_reference","Map","style","width","height","TileLayer","attribution","url","App","updatedRestaurants","filter","thisEntry","length","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"gSAMqBA,G,wDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,kBAAoB,WAClB,IAAIC,EAOG,UAPIC,cAAmB,CAC5BC,SAAU,EAAKJ,MAAMK,WAAWC,SAASC,SAASC,IAClDC,UAAW,EAAKT,MAAMK,WAAWC,SAASC,SAASG,KAEnD,CACEN,SAAU,EAAKJ,MAAMQ,IACrBC,UAAW,EAAKT,MAAMU,MAG1BR,EAAOS,KAAKC,MAAgC,KAAzBV,EAAOW,OAAOC,UAAkB,IACnD,EAAKC,SAAS,CAAEC,SAAUd,IAE1B,IAAMe,EAAQ,CACZC,KAAM,EAAKlB,MAAMK,WAAWa,KAC5BZ,SAAU,EAAKN,MAAMK,WAAWC,SAChCa,cAAe,EAAKnB,MAAMK,WAAWc,cACrCC,OAAQ,EAAKpB,MAAMK,WAAWe,OAC9BC,YAAa,EAAKrB,MAAMK,WAAWgB,YACnCC,OAAQ,EAAKtB,MAAMK,WAAWiB,OAC9BC,MAAO,EAAKvB,MAAMK,WAAWkB,MAC7BC,mBAAoB,EAAKxB,MAAMK,WAAWmB,mBAC1CC,SAAU,EAAKzB,MAAMK,WAAWoB,SAChCT,SAAUd,GAEZ,EAAKF,MAAM0B,YAAYT,IAlCN,EAqCnBU,YAAc,WACX,EAAKC,MAAMD,YACV,EAAKZ,SAAS,CAAEc,QAAS,GAAIF,aAAa,IAC1C,EAAKZ,SAAS,CAAEc,QAAS,EAAK7B,MAAMK,WAAWoB,SAAUE,aAAa,KAtCxE,EAAKC,MAAQ,CACXZ,SAAU,KACVW,aAAa,EACbE,QAAS,IALM,E,qDA4CjB,OACE,6BACE,yBAAKC,UAAU,SAEb,kBAACC,EAAA,EAAD,CAAMD,UAAU,QACd,kBAACC,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAKE,KAAN,KACE,qCAAWC,KAAKlC,MAAMK,WAAWa,KAAjC,KADF,IAC+C,6BAC7C,uCAAagB,KAAKlC,MAAMK,WAAWiB,QAFrC,IAEkD,6BAChD,kDAAwBY,KAAKlC,MAAMK,WAAWmB,oBAHhD,IAGyE,6BAC/B,IAAtCU,KAAKlC,MAAMK,WAAWgB,YACtB,wCAEwC,IAAtCa,KAAKlC,MAAMK,WAAWgB,YACtB,yCAEwC,IAAtCa,KAAKlC,MAAMK,WAAWgB,YACtB,0CAEA,0CAbR,IAgBI,6BACF,yCAAea,KAAKN,MAAMZ,SAA1B,eAjBF,IAiBsD,6BACpD,kBAACmB,EAAA,EAAD,CAAQC,QAASF,KAAKP,aAAtB,qBAlBF,IAkBiE,6BAC/D,4BAAKO,KAAKN,MAAMC,kB,GAtEGQ,cCJdC,G,wDACjB,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IACD4B,MAAQ,GAFE,E,qDAKT,IAAD,OACL,OACI,yBAAKE,UAAU,UACX,2BAAOA,UAAU,aAAjB,YACA,4BAAQS,GAAG,WAAWC,SAAU,SAAAC,GAAC,OAAI,EAAKzC,MAAM0C,mBAAmBD,EAAEE,OAAOC,SACxE,4BAAQA,MAAM,WAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,gB,GAbgBP,cCGfQ,E,kDACnB,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAOR0C,mBAAqB,SAAAI,GACA,YAAjBA,EAA8B,EAAK/B,SAAS,CAAEgC,aAAa,IAAU,EAAKhC,SAAS,CAAEgC,aAAa,IACpGC,QAAQC,IAAIH,GACZE,QAAQC,IAAqB,YAAjBH,GACZE,QAAQC,IAAI,EAAKrB,MAAMmB,aACvB,EAAKhC,SAAS,CAAEmC,SAAUJ,KAbT,EAgBnBK,OAAS,WACP,IAAIC,EAAM,YAAO,EAAKpD,MAAMqD,aAC5B,OAAI,EAAKzB,MAAMmB,YACe,UAAxB,EAAKnB,MAAMsB,SAEXE,EAAOE,MAAK,SAAUC,EAAQC,GAC5B,IAAIC,EAASF,EAAOlC,YAChBqC,EAASF,EAAOnC,YAGpB,YAF2BsC,IAAvBJ,EAAOlC,cAA6BoC,EAAS,QACtBE,IAAvBH,EAAOnC,cAA6BqC,EAAS,GAC1CA,EAASD,KAMlBL,EAAOE,MAAK,SAAUC,EAAQC,GAC5B,OAAOA,EAAOlC,OAASiC,EAAOjC,UAMlC8B,EAAOE,MAAK,SAAUC,EAAQC,GAC5B,OAAOA,EAAOxC,SAAWuC,EAAOvC,aAtCtC,EAAKY,MAAQ,CACXmB,aAAa,EACbG,SAAU,WAJK,E,qDA6CT,IAAD,OAEHE,EADelB,KAAKiB,SACES,KAAI,SAACvD,GAC7B,OACE,kBAAC,EAAD,CAAOyB,UAAU,QACfzB,WAAYA,EACZG,IAAK,EAAKR,MAAMQ,IAChBE,IAAK,EAAKV,MAAMU,IAChBgB,YAAa,EAAK1B,MAAM0B,iBAI9B,OACE,yBAAKI,UAAU,eACb,0DACA,yBAAKA,UAAU,aAAasB,GAC5B,6BACE,kBAAC,EAAD,CAAQV,mBAAoBR,KAAKQ,mBAAoBW,YAAanB,KAAKlC,MAAMqD,oB,GA/D9ChB,a,kDCCpBwB,G,yDACjB,WAAY7D,GAAQ,IAAD,8BACf,cAAMA,IASV8D,uBAAyB,SAACrB,GACtBO,QAAQC,IAAIR,EAAEE,OAAOC,OACrB,EAAK7B,SAAS,CACVgD,cAAetB,EAAEE,OAAOC,MACxBoB,eAAgBvB,EAAEE,OAAOC,QAE7B,EAAK5C,MAAMiE,aAAaxB,EAAEE,OAAOC,MAAO,EAAKhB,MAAMsC,QAhBpC,EAmBnBC,kBAAoB,SAAC1B,GACjB,EAAK1B,SAAS,CACVmD,MAAOzB,EAAEE,OAAOC,MAChBwB,aAAc3B,EAAEE,OAAOC,QAE3B,EAAK5C,MAAMiE,aAAa,EAAKrC,MAAMmC,cAAetB,EAAEE,OAAOC,QAtB3D,EAAKhB,MAAQ,CACTmC,cAAe,aACfG,MAAO,GACPF,eAAgB,GAChBI,aAAc,IANH,E,qDA+Bf,OACI,yBAAKtC,UAAU,SAEX,kBAACuC,EAAA,EAAD,CAAmBC,KAAK,QAAQpD,KAAK,gBAAgBkB,QAASF,KAAK4B,uBAAwBhC,UAAU,iBACjG,kBAAC,IAAD,CAAcyC,KAAK,KAAK3B,MAAM,aAAa4B,QAAwC,eAA9BtC,KAAKN,MAAMoC,eAAmC,UAAY,WAA/G,oBAGA,kBAAC,IAAD,CAAcO,KAAK,KAAK3B,MAAM,MAAM4B,QAAwC,QAA9BtC,KAAKN,MAAMoC,eAA4B,UAAY,WAAjG,cAOJ,kBAACK,EAAA,EAAD,CAAmBC,KAAK,QAAQpD,KAAK,cAAckB,QAASF,KAAKiC,mBAC7D,kBAAC,IAAD,CAAcI,KAAK,KAAK3B,MAAM,IAAI4B,QAAsC,MAA5BtC,KAAKN,MAAMwC,aAAwB,UAAY,WAA3F,YAIA,kBAAC,IAAD,CAAcG,KAAK,KAAK3B,MAAM,IAAI4B,QAAsC,MAA5BtC,KAAKN,MAAMwC,aAAwB,UAAY,WAA3F,aAIA,kBAAC,IAAD,CAAcG,KAAK,KAAK3B,MAAM,IAAI4B,QAAsC,MAA5BtC,KAAKN,MAAMwC,aAAwB,UAAY,WAA3F,cAIA,kBAAC,IAAD,CAAcG,KAAK,KAAK3B,MAAM,IAAI4B,QAAsC,MAA5BtC,KAAKN,MAAMwC,aAAwB,UAAY,WAA3F,0B,GA3D0B/B,cCEzBoC,G,yDACnB,WAAYzE,GAAQ,IAAD,8BACjB,cAAMA,IAURoC,QAAU,WACRsC,EAAQ,IAAUC,SAGlBC,IAAQC,UAFIC,2CAGZF,IAAQG,YAAY,EAAKnD,MAAMC,SAASmD,MACtC,SAAAC,GAAa,IAAD,EACSA,EAASC,QAAQ,GAAG5E,SAASC,SAA1CC,EADI,EACJA,IAAKE,EADD,EACCA,IACX,EAAKK,SAAS,CACZP,IAAKA,EACL2E,KAAMzE,IACL,WACD,EAAK0E,YACL,EAAKpF,MAAMqF,UAAU,EAAKzD,MAAMpB,IAAK,EAAKoB,MAAMuD,YAIpD,SAAAG,GACEtC,QAAQC,IAAIqC,GACZC,MAAM,6CA9BO,EAkCnBH,UAAY,WACVV,EAAQ,IAAUC,SAElBa,IAAMC,IACJ,yEACE,EAAK7D,MAAMpB,IAAM,IAAM,EAAKoB,MAAMuD,KACpC,WAAc,EAAKvD,MAAM8D,OAAS,SAAa,SAAW,EAAK9D,MAAMmC,cAAgB,EAAKnC,MAAM+D,MAFhG,wDAGCX,MAAK,SAACC,GACLjC,QAAQC,IAAIgC,EAASW,MACrB,EAAK5F,MAAM6F,eAAeZ,EAASW,KAAKV,aA3C3B,EA+CnBjB,aAAe,SAAC6B,EAAkBC,GACf,MAAhBA,EAAuB,EAAKhF,SAAS,CAAEgD,cAAe+B,EAAkBH,MAAO,KAC9E,EAAK5E,SAAS,CACZgD,cAAe+B,EACfH,MAAO,aAAeI,EAAc,aAAeA,KAjDvD,EAAKnE,MAAQ,CACXC,QAAS,GACT6D,OAAQ,EACRlF,IAAK,EACL2E,KAAM,EACNpB,cAAe,aACf4B,MAAO,IARQ,E,qDAuDT,IAAD,OACP,OACE,kBAACK,EAAA,EAAD,CAAQC,GAAG,OAAOzB,QAAQ,OAAO1C,UAAU,UACzC,kBAACkE,EAAA,EAAOE,MAAR,CAAcpE,UAAU,QAAxB,eACA,2BAAOA,UAAU,eAAjB,aACA,2BACEwC,KAAK,OACL9B,SAAU,SAACC,GAAD,OAAO,EAAK1B,SAAS,CAAEc,QAASY,EAAEE,OAAOC,WAErD,2BAAOd,UAAU,eAAjB,kBACA,2BACEA,UAAU,cACVwC,KAAK,SACL6B,IAAI,IACJC,IAAI,KACJ5D,SAAU,SAACC,GAAD,OAAO,EAAK1B,SAAS,CAAE2E,OAAQjD,EAAEE,OAAOC,WAEpD,kBAAC,EAAD,CAAkBqB,aAAc/B,KAAK+B,eACrC,kBAAC9B,EAAA,EAAD,CAAQoC,KAAK,KAAKzC,UAAU,YAAY0C,QAAQ,UAAUpC,QAASF,KAAKE,SAAxE,oB,GA1E2BC,c,oCCLdgE,E,kDACnB,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,CACX0E,SAAU,CACRC,OAAQ,CAAC,EAAKvG,MAAMQ,IAAK,EAAKR,MAAMU,KACpC8F,KAAM,KAGV9B,EAAQ,IAAUC,SAClB,EAAK8B,IAAM3B,0CATM,E,+DAYA4B,GACbA,EAAUlG,MAAQ0B,KAAKlC,MAAMQ,KAAOkG,EAAUhG,MAAQwB,KAAKlC,MAAMU,MACnEsC,QAAQC,IAAI,wBACZD,QAAQC,IAAIf,KAAKlC,MAAMQ,IAAK0B,KAAKlC,OACjCkC,KAAKnB,SAAS,CACZuF,SAAU,CAAEC,OAAQ,CAACrE,KAAKlC,MAAMQ,IAAK0B,KAAKlC,MAAMU,KAAM8F,KAAM,S,+BAIxD,IAAD,OACHG,EAAUzE,KAAKlC,MAAMqD,YAAYO,KAAI,SAACvD,GACxC,OACE,kBAACuG,EAAA,EAAD,CACEC,SAAU,CACRxG,EAAWC,SAASC,SAASC,IAC7BH,EAAWC,SAASC,SAASG,MAG/B,kBAACoG,EAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,CAAMgF,OAAO,QAAQd,GAAG,SACtB,kBAAClE,EAAA,EAAKiF,OAAN,KAAa,4BAAK3G,EAAWa,MAAU,6BAAOb,EAAWoB,eAClCkC,IAAtBtD,EAAWe,OACV,kBAACW,EAAA,EAAKkF,IAAN,CACEzC,QAAQ,SACR0C,IACE,gFACA7G,EAAWe,OAAO,GAAG+F,gBACrB,QACA,EAAKV,MAEH,wDAMlB,OACE,kBAACW,EAAA,EAAD,CACEd,SAAUpE,KAAKN,MAAM0E,SACrBe,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAEhC,kBAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELf,O,GA1D2BtE,aCIfsF,G,yDACnB,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IAQR6F,eAAiB,SAACX,GAChB,EAAKnE,SAAS,CAAEsC,YAAa6B,KAVZ,EAanBG,UAAY,SAAC7E,EAAKE,GAChB,EAAKK,SAAS,CACZP,IAAKA,EACLE,IAAKA,KAhBU,EAoBnBgB,YAAc,SAAAT,GACZ,IAAI2G,EAAqB,EAAKhG,MAAMyB,YAAYwE,QAC9C,SAAAC,GAAS,OAAIA,EAAU5G,OAASD,EAAMC,QAExC0G,EAAmBA,EAAmBG,QAAU9G,EAChD,EAAKF,SAAS,CAAEsC,YAAauE,KAvB7B,EAAKhG,MAAQ,CACXyB,YAAa,GACb7C,IAAK,EACLE,IAAK,GALU,E,qDA6BjB,OACE,6BACE,yBAAKoB,UAAU,SACb,kBAAC,EAAD,CAAO+D,eAAgB3D,KAAK2D,eAAgBR,UAAWnD,KAAKmD,aAE9D,yBAAKvD,UAAU,QACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAauB,YAAanB,KAAKN,MAAMyB,YACnC7C,IAAK0B,KAAKN,MAAMpB,IAChBE,IAAKwB,KAAKN,MAAMlB,IAChBgB,YAAaQ,KAAKR,eAEtB,yBAAKI,UAAU,OACb,kBAAC,EAAD,CAAQtB,IAAK0B,KAAKN,MAAMpB,IAAKE,IAAKwB,KAAKN,MAAMlB,IAAK2C,YAAanB,KAAKN,MAAMyB,qB,GA3CrDhB,cCKb2F,QACW,cAA7BC,OAAO1H,SAAS2H,UAEe,UAA7BD,OAAO1H,SAAS2H,UAEhBD,OAAO1H,SAAS2H,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3D,MAAK,SAAA4D,GACJA,EAAaC,gBAEdC,OAAM,SAAAxD,GACLtC,QAAQsC,MAAMA,EAAMyD,a","file":"static/js/main.14156a04.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as geolib from 'geolib';\r\nimport './Entry.css';\r\n\r\nexport default class Entry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      distance: null,\r\n      showAddress: false,\r\n      address: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var dist = geolib.getDistance({\r\n      latitude: this.props.restaurant.geometry.location.lat,\r\n      longitude: this.props.restaurant.geometry.location.lng,\r\n    },\r\n      {\r\n        latitude: this.props.lat,\r\n        longitude: this.props.lng,\r\n      }) * 0.000621371;\r\n\r\n    dist = Math.round((dist + Number.EPSILON) * 100) / 100;\r\n    this.setState({ distance: dist })\r\n\r\n    const entry = {\r\n      name: this.props.restaurant.name,\r\n      geometry: this.props.restaurant.geometry,\r\n      opening_hours: this.props.restaurant.opening_hours,\r\n      photos: this.props.restaurant.photos,\r\n      price_level: this.props.restaurant.price_level,\r\n      rating: this.props.restaurant.rating,\r\n      types: this.props.restaurant.types,\r\n      user_ratings_total: this.props.restaurant.user_ratings_total,\r\n      vicinity: this.props.restaurant.vicinity,\r\n      distance: dist\r\n    }\r\n    this.props.setDistance(entry);\r\n  }\r\n\r\n  showAddress = () => {\r\n    (this.state.showAddress) ?\r\n      this.setState({ address: \"\", showAddress: false, }) :\r\n      this.setState({ address: this.props.restaurant.vicinity, showAddress: true, })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"Entry\">\r\n\r\n          <Card className=\"Card\">\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <em>Name: {this.props.restaurant.name} </em> < br />\r\n                <em>Rating: {this.props.restaurant.rating}</em> < br />\r\n                <em>Number of ratings: {this.props.restaurant.user_ratings_total}</em> < br />\r\n                {(this.props.restaurant.price_level === 1) ?\r\n                  <em>Price: $</em>\r\n                  :\r\n                  ((this.props.restaurant.price_level === 2) ?\r\n                    <em>Price: $$</em>\r\n                    :\r\n                    ((this.props.restaurant.price_level === 3) ?\r\n                      <em>Price: $$$</em>\r\n                      :\r\n                      <em>Price: N/A</em>\r\n                    )\r\n                  )\r\n                } < br />\r\n                <em>Distance: {this.state.distance} miles away</em> < br />\r\n                <Button onClick={this.showAddress} >Show/Hide Address</Button> < br />\r\n                <em>{this.state.address}</em>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Filter\">\r\n                <label className=\"sortLabel\">Sort by </label>\r\n                <select id=\"filterBy\" onChange={e => this.props.handleFilterChange(e.target.value)} >\r\n                    <option value=\"default\">Sort By... </option>\r\n                    <option value=\"price\">Price</option>\r\n                    <option value=\"rating\">Rating</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Entry from \"./Entry.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Filter from './Filter.js';\r\n\r\nexport default class Restaurants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFiltering: false,\r\n      filterBy: \"default\",\r\n    };\r\n  }\r\n\r\n  handleFilterChange = filterOption => {\r\n    ((filterOption !== \"default\") ? this.setState({ isFiltering: true }) : this.setState({ isFiltering: false }))\r\n    console.log(filterOption)\r\n    console.log(filterOption !== \"default\")\r\n    console.log(this.state.isFiltering)\r\n    this.setState({ filterBy: filterOption })\r\n  }\r\n\r\n  sortBy = () => {\r\n    var stores = [...this.props.restaurants];\r\n    if (this.state.isFiltering) {\r\n      if (this.state.filterBy === \"price\") {\r\n        return (\r\n          stores.sort(function (store1, store2) {\r\n            var price1 = store1.price_level;\r\n            var price2 = store2.price_level;\r\n            if (store1.price_level === undefined) { price1 = 0 }\r\n            if (store2.price_level === undefined) { price2 = 0 }\r\n            return price2 - price1;\r\n          })\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          stores.sort(function (store1, store2) {\r\n            return store2.rating - store1.rating;\r\n          }))\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        stores.sort(function (store1, store2) {\r\n          return store2.distance - store1.distance;\r\n        }))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let sortedStores = this.sortBy();\r\n    let stores = sortedStores.map((restaurant) => {\r\n      return (\r\n        <Entry className=\"Entry\"\r\n          restaurant={restaurant}\r\n          lat={this.props.lat}\r\n          lng={this.props.lng}\r\n          setDistance={this.props.setDistance} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Restaurants\">\r\n        <h4>Nearby, open restaurants: </h4>\r\n        <div className=\"cardsList\">{stores}</div>\r\n        <div>\r\n          <Filter handleFilterChange={this.handleFilterChange} restaurants={this.props.restaurants} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ButtonGroup from \"react-bootstrap/Button\";\r\nimport ToggleButton from \"react-bootstrap/Button\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport './RestaurantFilter.css';\r\n\r\nexport default class RestaurantFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            RestaurantBar: \"restaurant\",\r\n            Price: \"\",\r\n            restbarPressed: \"\",\r\n            pricePressed: \"\",\r\n        }\r\n    }\r\n\r\n    handleRestaurantChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.setState({\r\n            RestaurantBar: e.target.value,\r\n            restbarPressed: e.target.value\r\n        });\r\n        this.props.changeFilter(e.target.value, this.state.Price)\r\n    };\r\n\r\n    handlePriceChange = (e) => {\r\n        this.setState({\r\n            Price: e.target.value,\r\n            pricePressed: e.target.value,\r\n        });\r\n        this.props.changeFilter(this.state.RestaurantBar, e.target.value)\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"radio\">\r\n\r\n                <ToggleButtonGroup type=\"radio\" name=\"restaurantBar\" onClick={this.handleRestaurantChange} className=\"restbarChange\">\r\n                    <ToggleButton size=\"sm\" value=\"restaurant\" variant={(this.state.restbarPressed === \"restaurant\") ? \"success\" : \"primary\"}>\r\n                        Only Restaurants\r\n            </ToggleButton>\r\n                    <ToggleButton size=\"sm\" value=\"bar\" variant={(this.state.restbarPressed === \"bar\") ? \"success\" : \"primary\"} >\r\n                        Only Bars\r\n            </ToggleButton>\r\n\r\n                </ToggleButtonGroup >\r\n\r\n\r\n                <ToggleButtonGroup type=\"radio\" name=\"priceChange\" onClick={this.handlePriceChange} >\r\n                    <ToggleButton size=\"sm\" value=\"1\" variant={(this.state.pricePressed === \"1\") ? \"success\" : \"primary\"} >\r\n                        Price: $\r\n            </ToggleButton>\r\n\r\n                    <ToggleButton size=\"sm\" value=\"2\" variant={(this.state.pricePressed === \"2\") ? \"success\" : \"primary\"} >\r\n                        Price: $$\r\n            </ToggleButton >\r\n\r\n                    <ToggleButton size=\"sm\" value=\"3\" variant={(this.state.pricePressed === \"3\") ? \"success\" : \"primary\"} >\r\n                        Price: $$$\r\n            </ToggleButton >\r\n\r\n                    <ToggleButton size=\"sm\" value=\"4\" variant={(this.state.pricePressed === \"4\") ? \"success\" : \"primary\"} >\r\n                        Price Range: All\r\n            </ ToggleButton >\r\n\r\n                </ToggleButtonGroup >\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport axios from 'axios';\r\nimport Geocode from 'react-geocode';\r\nimport RestaurantFilter from './RestaurantFilter.js';\r\nimport \"./Input.css\";\r\n\r\nexport default class Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      radius: 1,\r\n      lat: 0,\r\n      long: 0,\r\n      RestaurantBar: \"restaurant\",\r\n      price: \"\",\r\n    };\r\n  }\r\n  onClick = () => {\r\n    require('dotenv').config();\r\n    const API = process.env.REACT_APP_KEY;\r\n\r\n    Geocode.setApiKey(API)\r\n    Geocode.fromAddress(this.state.address).then(\r\n      response => {\r\n        let { lat, lng } = response.results[0].geometry.location;\r\n        this.setState({\r\n          lat: lat,\r\n          long: lng,\r\n        }, () => {\r\n          this.getStores();\r\n          this.props.setLatLng(this.state.lat, this.state.long);\r\n        })\r\n      },\r\n\r\n      error => {\r\n        console.log(error);\r\n        alert(\"Please input a valid place or address\");\r\n      }\r\n    )\r\n  }\r\n  getStores = () => {\r\n    require('dotenv').config();\r\n    const API = process.env.REACT_APP_KEY;\r\n    axios.get(\r\n      \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\"\r\n      + this.state.lat + \",\" + this.state.long +\r\n      \"&radius=\" + (this.state.radius / .00062137) + \"&type=\" + this.state.RestaurantBar + this.state.price + \"&opennow&key=\" + API)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.props.setRestaurants(response.data.results);\r\n      })\r\n  }\r\n\r\n  changeFilter = (restaurantOption, priceOption) => {\r\n    (priceOption === \"4\") ? this.setState({ RestaurantBar: restaurantOption, price: \"\" }) :\r\n      this.setState({\r\n        RestaurantBar: restaurantOption,\r\n        price: \"&minprice=\" + priceOption + \"&maxprice=\" + priceOption,\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"navBar\">\r\n        <Navbar.Brand className=\"logo\">HoosEating?</Navbar.Brand>\r\n        <label className=\"navbarLabel\">Address: </label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => this.setState({ address: e.target.value })}\r\n        />\r\n        <label className=\"navbarLabel\">Enter radius: </label>\r\n        <input\r\n          className=\"radiusInput\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"30\"\r\n          onChange={(e) => this.setState({ radius: e.target.value })}\r\n        />\r\n        <RestaurantFilter changeFilter={this.changeFilter} />\r\n        <Button size=\"lg\" className=\"getPlaces\" variant=\"success\" onClick={this.onClick}>Get Places!</Button>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Map, TileLayer, Popup, Marker } from \"react-leaflet\";\r\nimport Card from \"react-bootstrap/Card\";\r\nexport default class AppMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewport: {\r\n        center: [this.props.lat, this.props.lng],\r\n        zoom: 15,\r\n      },\r\n    };\r\n    require(\"dotenv\").config();\r\n    this.API = process.env.REACT_APP_KEY;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.lat !== this.props.lat || prevProps.lng !== this.props.lng) {\r\n      console.log(\"Component did update\");\r\n      console.log(this.props.lat, this.props);\r\n      this.setState({\r\n        viewport: { center: [this.props.lat, this.props.lng], zoom: 15 },\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let markers = this.props.restaurants.map((restaurant) => {\r\n      return (\r\n        <Marker\r\n          position={[\r\n            restaurant.geometry.location.lat,\r\n            restaurant.geometry.location.lng,\r\n          ]}\r\n        >\r\n          <Popup>\r\n            <Card border=\"light\" bg=\"light\">\r\n              <Card.Header><h6>{restaurant.name}</h6><br />{restaurant.vicinity}</Card.Header>\r\n              {restaurant.photos !== undefined ? (\r\n                <Card.Img\r\n                  variant=\"bottom\"\r\n                  src={\r\n                    \"https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=\" +\r\n                    restaurant.photos[0].photo_reference +\r\n                    \"&key=\" +\r\n                    this.API\r\n                  }\r\n                />) : <h3>No photo available</h3>}\r\n            </Card>\r\n          </Popup>\r\n        </Marker>\r\n      );\r\n    });\r\n    return (\r\n      <Map\r\n        viewport={this.state.viewport}\r\n        style={{ width: \"73vw\", height: \"82vh\" }}\r\n      >\r\n        <TileLayer\r\n          attribution='copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {markers}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Restaurants from \"./Restaurants.js\";\r\nimport Input from \"./Input.js\";\r\nimport AppMap from \"./AppMap.js\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurants: [],\r\n      lat: 0,\r\n      lng: 0\r\n    };\r\n  }\r\n\r\n  setRestaurants = (results) => {\r\n    this.setState({ restaurants: results })\r\n  }\r\n\r\n  setLatLng = (lat, lng) => {\r\n    this.setState({\r\n      lat: lat,\r\n      lng: lng\r\n    })\r\n  }\r\n\r\n  setDistance = entry => {\r\n    var updatedRestaurants = this.state.restaurants.filter(\r\n      thisEntry => thisEntry.name !== entry.name\r\n    )\r\n    updatedRestaurants[updatedRestaurants.length] = entry;\r\n    this.setState({ restaurants: updatedRestaurants });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"Input\">\r\n          <Input setRestaurants={this.setRestaurants} setLatLng={this.setLatLng} />\r\n        </div>\r\n        <div className=\"data\">\r\n          <div className=\"Restaurants\">\r\n            <Restaurants restaurants={this.state.restaurants}\r\n              lat={this.state.lat}\r\n              lng={this.state.lng}\r\n              setDistance={this.setDistance} />\r\n          </div>\r\n          <div className=\"Map\">\r\n            <AppMap lat={this.state.lat} lng={this.state.lng} restaurants={this.state.restaurants} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}